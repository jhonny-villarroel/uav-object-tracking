"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class mavlink_message_t(object):
    __slots__ = ["checksum", "magic", "len", "seq", "sysid", "compid", "msgid", "payload64"]

    def __init__(self):
        self.checksum = 0
        self.magic = 0
        self.len = 0
        self.seq = 0
        self.sysid = 0
        self.compid = 0
        self.msgid = 0
        self.payload64 = [ 0 for dim0 in range(33) ]

    def encode(self):
        buf = BytesIO()
        buf.write(mavlink_message_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">hbbbbbb", self.checksum, self.magic, self.len, self.seq, self.sysid, self.compid, self.msgid))
        buf.write(struct.pack('>33q', *self.payload64[:33]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != mavlink_message_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return mavlink_message_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = mavlink_message_t()
        self.checksum, self.magic, self.len, self.seq, self.sysid, self.compid, self.msgid = struct.unpack(">hbbbbbb", buf.read(8))
        self.payload64 = struct.unpack('>33q', buf.read(264))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if mavlink_message_t in parents: return 0
        tmphash = (0x555f977d7a0ed283) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if mavlink_message_t._packed_fingerprint is None:
            mavlink_message_t._packed_fingerprint = struct.pack(">Q", mavlink_message_t._get_hash_recursive([]))
        return mavlink_message_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

